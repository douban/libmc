name: manual

on:
  workflow_dispatch:

jobs:
  cpptest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: ["gcc"]
        build_type: ["Debug"]

    steps:
    - uses: actions/checkout@v2
    - name: Setup system dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install memcached g++
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools future pytest greenify gevent numpy
    - name: Run cpptest
      run: |
        if [[ ${{ matrix.compiler }} = "gcc" ]]; then export CC=gcc CXX=g++; fi
        if [[ ${{ matrix.compiler }} = "clang" ]]; then export CC=clang CXX=clang++; fi
        ./misc/travis/cpptest.sh

  pylatest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pyver: ["3.12"]
        compiler: ["gcc"]
        build_type: ["Debug"]

    steps:
    - uses: actions/checkout@v2
    - name: Setup system dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install valgrind memcached g++
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyver }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools future pytest greenify gevent numpy
    - name: Start memcached servers
      run: ./misc/memcached_server startall
    - name: Run unittest
      run: |
        if [[ ${{ matrix.compiler }} = "gcc" ]]; then export CC=gcc CXX=g++; fi
        if [[ ${{ matrix.compiler }} = "clang" ]]; then export CC=clang CXX=clang++; fi
        ./misc/travis/unittest.sh
    - name: Stop memcached servers
      run: ./misc/memcached_server stopall

  goclang:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        gover: ["1.15"]
        compiler: ["clang"]

    steps:
    - uses: actions/checkout@v2
    - name: Setup system dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install memcached
    - name: Set up Golang
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.gover }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Start memcached servers
      run: ./misc/memcached_server start
    - name: Run gotest
      run: |
        export CC=clang CXX=clang++
        clang++ -v
        ./misc/travis/gotest.sh
    - name: Stop memcached servers
      run: ./misc/memcached_server stop
