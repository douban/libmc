dist: xenial
language: python
os: linux
python:
- '2.7'
- '3.6'
- '3.7'
- '3.8'
cache:
  pip: true
env:
- TEST_SUITE=unittest CMAKE_BUILD_TYPE=Release PRJ_COMPILER=clang
- TEST_SUITE=unittest CMAKE_BUILD_TYPE=Debug PRJ_COMPILER=clang
- TEST_SUITE=unittest CMAKE_BUILD_TYPE=Release PRJ_COMPILER=gcc
- TEST_SUITE=unittest CMAKE_BUILD_TYPE=Debug PRJ_COMPILER=gcc
- TEST_SUITE=benchmark
jobs:
  include:
  - env: TEST_SUITE=gotest PRJ_COMPILER=gcc
  - env: TEST_SUITE=gotest PRJ_COMPILER=clang
  - env: TEST_SUITE=cppcheck
  - env: TEST_SUITE=buildwheels PLAT=manylinux1_x86_64
    python: '3.7'
    services:
      - docker
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - python-dev
    - python-numpy
    - valgrind
    - cppcheck
    - memcached
    - libmemcached11
    - g++
    - golang
install:
- if [[ $TEST_SUITE = "unittest" || $TEST_SUITE = "benchmark" || $TEST_SUITE = "buildwheels" ]]; then pip install --upgrade pip setuptools future; fi
- if [[ $TEST_SUITE = "unittest" || $TEST_SUITE = "benchmark" ]]; then pip install pytest greenify gevent; fi
- if [[ $TEST_SUITE = "benchmark" ]]; then pip install python-memcached pylibmc; fi
- if [[ $TEST_SUITE = "buildwheels" ]]; then docker pull quay.io/pypa/$PLAT; fi
before_script:
- if [[ $TEST_SUITE != "cppcheck" && $TEST_SUITE != "buildwheels" ]]; then ./misc/memcached_server start; fi
script:
- if [[ $PRJ_COMPILER = "gcc" ]]; then export CC=gcc CXX=g++; fi
- if [[ $PRJ_COMPILER = "clang" ]]; then export CC=clang CXX=clang++; fi
- "./misc/travis/$TEST_SUITE.sh"
after_script:
- if [[ $TEST_SUITE != "cppcheck" && $TEST_SUITE != "buildwheels" ]]; then ./misc/memcached_server stop; fi
deploy:
  provider: script
  script: "./misc/deploy_pypi.sh"
  skip_cleanup: true
  on:
    tags: true
    repo: douban/libmc
    branch: master
    condition: $TEST_SUITE = "buildwheels"
