diff --git a/setup.py b/setup.py
index c9807b9..b3a915b 100644
--- a/setup.py
+++ b/setup.py
@@ -5,23 +5,43 @@ import sys
 import shlex
 import pkg_resources
 import platform
+import functools
+import inspect
 from distutils.sysconfig import get_config_var
 from distutils.version import LooseVersion
 from glob import glob
 from setuptools import setup, Extension
 from setuptools.command.test import test as TestCommand
+from setuptools.command.build_ext import build_ext
+from Cython.Build import cythonize
 
 sources = (glob("src/*.cpp") + ["libmc/_client.pyx"])
 include_dirs = ["include"]
 
+COMPILER_PREARGS = [
+    "-DDYNAMIC_ANNOTATIONS_ENABLED=1",
+    "-g3",
+    "-Og",
+    "-Wall",
+    "-march=x86-64",
+    "-mtune=generic",
+    "-pipe",
+    "-Wp,-D_FORTIFY_SOURCE=2",
+    "-Werror=format-security",
+    "-fPIC",
+]
 COMPILER_FLAGS = [
     "-fno-strict-aliasing",
     "-fno-exceptions",
     "-fno-rtti",
     "-Wall",
     "-DMC_USE_SMALL_VECTOR",
-    "-O3",
-    "-DNDEBUG",
+    "-DDEBUG",
+]
+LINKER_FLAGS = [
+    "-shared",
+    "-g3",
+    "-Wl,-O0,--sort-common,--as-needed,-z,relro,-z,now"
 ]
 
 
@@ -91,6 +111,25 @@ class PyTest(TestCommand):
         errno = pytest.main(shlex.split(self.pytest_args))
         os._exit(errno)
 
+# https://shwina.github.io/custom-compiler-linker-extensions/
+class BlankBuildExt(build_ext):
+    def build_extensions(self):
+        orig = self.compiler.compile
+
+        @functools.wraps(orig)
+        def prearg_compile(*args, **kwargs):
+            bound = inspect.Signature.from_callable(orig).bind(*args, **kwargs)
+            bound.apply_defaults()
+            bound.arguments["extra_preargs"] = COMPILER_PREARGS
+            return orig(*bound.args, **bound.kwargs)
+
+        self.compiler.compile = prearg_compile
+
+        self.compiler.set_executable("compiler_so", "gcc")
+        #self.compiler.set_executable("compiler_cxx", "gcc")
+        self.compiler.set_executable("linker_so", "g++")
+        build_ext.build_extensions(self)
+
 
 setup(
     name="libmc",
@@ -121,16 +160,18 @@ setup(
     ],
     # Support for the basestring type is new in Cython 0.20.
     setup_requires=["Cython >= 0.20"],
-    cmdclass={"test": PyTest},
-    ext_modules=[
+    cmdclass={"test": PyTest, "build_ext": BlankBuildExt},
+    zip_safe=False,
+    ext_modules=cythonize([
         Extension(
             "libmc._client",
             sources,
             include_dirs=include_dirs,
             language="c++",
             extra_compile_args=COMPILER_FLAGS,
+            extra_link_args=LINKER_FLAGS
         )
-    ],
+    ], gdb_debug=True),
     tests_require=[
         "pytest",
         "future",
