#!/bin/bash

set -e

function virtualize()
{
    if [ ! -e venv ]; then
        py="${1:-`which python 2>/dev/null`}"
        pyenv="virtualenv"
        if ! $py -m pip list | grep -w "$pyenv" &> /dev/null; then
            if $py -m pip list | grep -w venv &> /dev/null; then
                pyenv="venv"
            else
                $py -m pip install "$pyenv"
            fi
        fi
        $py -m "$pyenv" --python="$py" --seeder=pip venv;
        source venv/bin/activate
        pip install -U pip
        pip install Cython setuptools future pytest
    else
        source venv/bin/activate
        if ! [ venv -ef "$VIRTUAL_ENV" ]; then
            echo "virtual environment was created with a different path"
            exit 1
        fi
    fi
}

function virtualize_libmc()
{
    if [ ! -e venv ]; then
        virtualize "$*"
        pip install greenify gevent
    else
        virtualize "$*"
    fi
}

function src_dir()
{
    cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd
}

case "$1" in
    test)
        shift
        echo $res
        ;;
    cy-debug)
        cd "`src_dir`/.."
        git apply misc/git/debug.patch --recount &> /dev/null || true
        source misc/git/pre-commit
        virtualize_libmc "`which python-dbg || which python3-dbg`"
        python setup.py build_ext --inplace
        if [ -n "$2" ]; then
            pattern="$2"
            shift 2
            cmds=(-ex start)
            for arg in "$@"; do cmds+=(-ex "$arg"); done
            cygdb . -- "${cmds[@]}" --args python setup.py test -a "--full-trace -s -k $pattern"
        else
            cygdb . -- -ex start --args python setup.py test -a -s
        fi
        ;;
    run-test)
        cd "`src_dir`/.."
        virtualize_libmc
        shift
        if [ -n "$1" ]; then
            python setup.py test -a "-k $*"
        else
            python setup.py test
        fi
        ;;
    bench)
        cd "`src_dir`/.."
        git apply misc/git/debug.patch -R --recount &> /dev/null || true
        virtualize_libmc
        python setup.py build_ext --inplace
        # python -m pip install pylibmc python-memcached
        if ! python -m pip list | grep -w "libmc" &> /dev/null; then
            python -m pip install -e .
        fi
        python misc/runbench.py
        ;;
    build-greenify)
        virtualize_libmc
        greenify=`python -c "import greenify; print(greenify.__file__)"`
        deactivate
        cd `dirname "$greenify"`
        rm -fr build
        virtualize "`which python-dbg || which python3-dbg`"
        python setup.py build_ext --inplace
        ;;
    *)
        printf 'Usage: %s {cy-debug [test pattern [gdb commands...]] | run-test [test pattern] | bench | build-greenify}\n' "$prog"
        exit 1
        ;;
esac
